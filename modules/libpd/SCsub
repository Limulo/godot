#!/usr/bin/env python

Import('env')
Import('env_modules')

env_libpd = env_modules.Clone()

# Thirdparty source files
if (env['builtin_libpd'] != 'no'):
	thirdparty_dir = "#thirdparty/libpd/"
	thirdparty_sources = [
		"libpd_wrapper/util/ringbuffer.c",
		"libpd_wrapper/util/z_print_util.c",
		"libpd_wrapper/util/z_queued.c",
		"libpd_wrapper/s_libpdmidi.c",
		"libpd_wrapper/x_libpdreceive.c",
		"libpd_wrapper/z_hooks.c",
		"libpd_wrapper/z_libpd.c",
		"pure-data/src/d_arithmetic.c",
		"pure-data/src/d_array.c",
		"pure-data/src/d_ctl.c",
		"pure-data/src/d_dac.c",
		"pure-data/src/d_delay.c",
		"pure-data/src/d_fft_fftsg.c",
		"pure-data/src/d_fft_fftw.c",
		"pure-data/src/d_fft.c",
		"pure-data/src/d_filter.c",
		"pure-data/src/d_global.c",
		"pure-data/src/d_math.c",
		"pure-data/src/d_misc.c",
		"pure-data/src/d_osc.c",
		"pure-data/src/d_resample.c",
		"pure-data/src/d_soundfile.c",
		"pure-data/src/d_ugen.c",
		"pure-data/src/g_all_guis.c",
		"pure-data/src/g_array.c",
		"pure-data/src/g_bang.c",
		"pure-data/src/g_canvas.c",
		"pure-data/src/g_clone.c",
		"pure-data/src/g_editor.c",
		"pure-data/src/g_graph.c",
		"pure-data/src/g_guiconnect.c",
		"pure-data/src/g_hdial.c",
		"pure-data/src/g_hslider.c",
		"pure-data/src/g_io.c",
		"pure-data/src/g_mycanvas.c",
		"pure-data/src/g_numbox.c",
		"pure-data/src/g_readwrite.c",
		"pure-data/src/g_rtext.c",
		"pure-data/src/g_scalar.c",
		"pure-data/src/g_template.c",
		"pure-data/src/g_text.c",
		"pure-data/src/g_toggle.c",
		"pure-data/src/g_traversal.c",
		"pure-data/src/g_vdial.c",
		"pure-data/src/g_vslider.c",
		"pure-data/src/g_vumeter.c",
		"pure-data/src/m_atom.c",
		"pure-data/src/m_binbuf.c",
		"pure-data/src/m_class.c",
		"pure-data/src/m_conf.c",
		"pure-data/src/m_glob.c",
		"pure-data/src/m_memory.c",
		"pure-data/src/m_obj.c",
		"pure-data/src/m_pd.c",
		"pure-data/src/m_sched.c",
		"pure-data/src/s_audio_alsa.c",
		"pure-data/src/s_audio_alsamm.c",
		"pure-data/src/s_audio_audiounit.c",
		"pure-data/src/s_audio_dummy.c",
		"pure-data/src/s_audio_esd.c",
		"pure-data/src/s_audio_jack.c",
		#"pure-data/src/s_audio_mmio.c",
		"pure-data/src/s_audio_oss.c",
		#"pure-data/src/s_audio_pa.c",
		"pure-data/src/s_audio_paring.c",
		"pure-data/src/s_audio.c",
		"pure-data/src/s_entry.c",
		"pure-data/src/s_file.c",
		"pure-data/src/s_inter.c",
		"pure-data/src/s_loader.c",
		"pure-data/src/s_main.c",
		"pure-data/src/s_midi_alsa.c",
		"pure-data/src/s_midi_dummy.c",
		"pure-data/src/s_midi_oss.c",
		#"pure-data/src/s_midi_pm.c",
		"pure-data/src/s_midi.c",
		"pure-data/src/s_path.c",
		"pure-data/src/s_print.c",
		"pure-data/src/s_utf8.c",
		"pure-data/src/s_watchdog.c",
		"pure-data/src/u_pdsend.c",
		"pure-data/src/x_acoustics.c",
		"pure-data/src/x_arithmetic.c",
		"pure-data/src/x_array.c",
		"pure-data/src/x_connective.c",
		"pure-data/src/x_gui.c",
		"pure-data/src/x_interface.c",
		"pure-data/src/x_list.c",
		"pure-data/src/x_midi.c",
		"pure-data/src/x_misc.c",
		"pure-data/src/x_net.c",
		"pure-data/src/x_scalar.c",
		"pure-data/src/x_text.c",
		"pure-data/src/x_time.c",
		"pure-data/src/x_vexp_fun.c",
		"pure-data/src/x_vexp_if.c",
		"pure-data/src/x_vexp.c",
	]
	thirdparty_sources = [thirdparty_dir + file for file in thirdparty_sources]
	thirdparty_include_paths = ["","libpd_wrapper/util","libp_wrapper", "pure-data", "pure-data/extra", "pure-data/src",]
	env_libpd.Append(CCFLAGS=['-O3', '-DPD', '-DHAVE_UNISTD_H', '-DUSEAPI_DUMMY', '-DHAVE_LIBDL',])#, '-DLIBPD_EXTRA',])

	env_libpd.add_source_files(env.modules_sources, thirdparty_sources)
	env_libpd.Append(CPPPATH=[thirdparty_dir, thirdparty_dir+'libpd_wrapper', thirdparty_dir+'libpd_wrapper/util', thirdparty_dir+'pure-data', thirdparty_dir+'pure-data/src',])# thirdparty_dir+'pure-data/extra',])

# Godot source files
env_libpd.add_source_files(env.modules_sources, "*.cpp")
